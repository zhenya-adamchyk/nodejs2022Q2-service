generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  version   Int    @default(autoincrement())
  createdAt Int
  updatedAt Int
  login     String
  password  String
}

model Track {
  id       String  @id @default(uuid())
  name     String
  artistId String?
  albumId  String?
  duration Int
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  fav Favorites?  @relation(fields: [favId], references: [id], onDelete: SetNull)
  favId String?
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean
  Album  Album[]
  Track  Track[]
  fav Favorites?  @relation(fields: [favId], references: [id], onDelete: SetNull)
  favId String?
}

model Album {
  id       String  @id @default(uuid())
  name     String
  year     Int
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String?
  Track    Track[]
  fav Favorites?  @relation(fields: [favId], references: [id], onDelete: SetNull)
  favId String?
}

model Favorites {
    id String @id @default(uuid())
    artists Artist[]
    albums Album[]
    tracks Track[]
}
